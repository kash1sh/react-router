{"version":3,"sources":["components/layout/MainNavigation.module.css","components/UI/LoadingSpinner.js","components/quotes/QuoteList.module.css","Hooks/use-http.js","lib/api.js","components/layout/Layout.module.css","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/layout/MainNavigation.js","components/layout/Layout.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","Pages/AllQuotes.js","App.js","index.js"],"names":["module","exports","LoadingSpinner","className","classes","spinner","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","a","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","id","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","MainNavigation","header","logo","nav","to","navData","isActive","active","Layout","props","main","children","QuoteItem","item","text","author","QuoteList","quotes","ascending","history","useNavigate","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","list","map","quote","NoQuotesFound","noquotes","AllQuotes","useEffect","length","NewQuote","React","lazy","QuoteDetail","NotFound","App","fallback","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d17e2ae2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__6WFgy\",\"logo\":\"MainNavigation_logo__3SMEd\",\"nav\":\"MainNavigation_nav__1gzYd\",\"active\":\"MainNavigation_active__3o1wr\"};","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__2JZfT\",\"sorting\":\"QuoteList_sorting__3QrNH\"};","import { useReducer, useCallback } from \"react\";\r\n\r\nfunction httpReducer(state, action) {\r\n  if (action.type === \"SEND\") {\r\n    return {\r\n      data: null,\r\n      error: null,\r\n      status: \"pending\",\r\n    };\r\n  }\r\n\r\n  if (action.type === \"SUCCESS\") {\r\n    return {\r\n      data: action.responseData,\r\n      error: null,\r\n      status: \"completed\",\r\n    };\r\n  }\r\n\r\n  if (action.type === \"ERROR\") {\r\n    return {\r\n      data: null,\r\n      error: action.errorMessage,\r\n      status: \"completed\",\r\n    };\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nfunction useHttp(requestFunction, startWithPending = false) {\r\n  const [httpState, dispatch] = useReducer(httpReducer, {\r\n    status: startWithPending ? \"pending\" : null,\r\n    data: null,\r\n    error: null,\r\n  });\r\n\r\n  const sendRequest = useCallback(\r\n    async function (requestData) {\r\n      dispatch({ type: \"SEND\" });\r\n      try {\r\n        const responseData = await requestFunction(requestData);\r\n        dispatch({ type: \"SUCCESS\", responseData });\r\n      } catch (error) {\r\n        dispatch({\r\n          type: \"ERROR\",\r\n          errorMessage: error.message || \"Something went wrong!\",\r\n        });\r\n      }\r\n    },\r\n    [requestFunction]\r\n  );\r\n\r\n  return {\r\n    sendRequest,\r\n    ...httpState,\r\n  };\r\n}\r\n\r\nexport default useHttp;\r\n","const FIREBASE_DOMAIN =\r\n  \"https://react-router-42a29-default-rtdb.firebaseio.com/\";\r\n\r\nexport async function getAllQuotes() {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || \"Could not fetch quotes.\");\r\n  }\r\n\r\n  const transformedQuotes = [];\r\n\r\n  for (const key in data) {\r\n    const quoteObj = {\r\n      id: key,\r\n      ...data[key],\r\n    };\r\n\r\n    transformedQuotes.push(quoteObj);\r\n  }\r\n\r\n  return transformedQuotes;\r\n}\r\n\r\nexport async function getSingleQuote(quoteId) {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || \"Could not fetch quote.\");\r\n  }\r\n\r\n  const loadedQuote = {\r\n    id: quoteId,\r\n    ...data,\r\n  };\r\n\r\n  return loadedQuote;\r\n}\r\n\r\nexport async function addQuote(quoteData) {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\r\n    method: \"POST\",\r\n    body: JSON.stringify(quoteData),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || \"Could not create quote.\");\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport async function addComment(requestData) {\r\n  const response = await fetch(\r\n    `${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`,\r\n    {\r\n      method: \"POST\",\r\n      body: JSON.stringify(requestData.commentData),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }\r\n  );\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || \"Could not add comment.\");\r\n  }\r\n\r\n  return { commentId: data.name };\r\n}\r\n\r\nexport async function getAllComments(quoteId) {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\r\n\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || \"Could not get comments.\");\r\n  }\r\n\r\n  const transformedComments = [];\r\n\r\n  for (const key in data) {\r\n    const commentObj = {\r\n      id: key,\r\n      ...data[key],\r\n    };\r\n\r\n    transformedComments.push(commentObj);\r\n  }\r\n\r\n  return transformedComments;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__1-KxD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__YYIQq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__1oeO-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__mkkVG\"};","import { NavLink } from \"react-router-dom\";\r\nimport classes from \"./MainNavigation.module.css\";\r\nconst MainNavigation = () => {\r\n  return (\r\n    <header className={classes.header}>\r\n      <div className={classes.logo}>Great Quotes</div>\r\n      <nav className={classes.nav}>\r\n        <ul>\r\n          <li>\r\n            <NavLink\r\n              to=\"/quotes\"\r\n              className={(navData) => (navData.isActive ? classes.active : \"\")}\r\n            >\r\n              All Quotes\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              to=\"/new-quote\"\r\n              className={(navData) => (navData.isActive ? classes.active : \"\")}\r\n            >\r\n              Add a Quote\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\nexport default MainNavigation;\r\n","import { Fragment } from \"react\";\r\nimport classes from \"./Layout.module.css\";\r\nimport MainNavigation from \"./MainNavigation\";\r\nconst Layout = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <MainNavigation />\r\n      <main className={classes.main}>{props.children}</main>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default Layout;\r\n","import { Link } from \"react-router-dom\";\nimport classes from \"./QuoteItem.module.css\";\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className=\"btn\" to={`${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\nconst QuoteList = (props) => {\n  const history = useNavigate();\n  const location = useLocation();\n  // console.log(location);\n\n  const queryParams = new URLSearchParams(location.search);\n  const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n  const changeSortingHandler = () => {\n    history(\"?sort=\" + (isSortingAscending ? \"desc\" : \"asc\"));\n  };\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortingAscending ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { Link } from \"react-router-dom\";\n\nimport classes from \"./NoQuotesFound.module.css\";\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className=\"btn\" to=\"/new-quote\">\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { useEffect } from \"react\";\r\nimport QuoteList from \"../components/quotes/QuoteList\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\r\nimport useHttp from \"../Hooks/use-http\";\r\nimport { getAllQuotes } from \"../lib/api\";\r\n// const DUMMY_QUOTES = [\r\n//   { id: \"q1\", author: \"Max\", text: \"Learning React is fun!\" },\r\n//   { id: \"q2\", author: \"Maximilian\", text: \"Learning React is great!\" },\r\n// ];\r\n\r\nconst AllQuotes = () => {\r\n  const { sendRequest, status, data, error } = useHttp(getAllQuotes, true);\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest]);\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className=\"centered focused\">{error}</p>;\r\n  }\r\n\r\n  if (status === \"completed\" && (!data || data.length === 0)) {\r\n    return <NoQuotesFound />;\r\n  }\r\n\r\n  return <QuoteList quotes={data} />;\r\n};\r\nexport default AllQuotes;\r\n","import React, { Suspense } from \"react\";\nimport { Route, Routes, Navigate } from \"react-router-dom\";\nimport Layout from \"./components/layout/Layout\";\nimport AllQuotes from \"./Pages/AllQuotes\";\n// import NewQuote from \"./Pages/NewQuote\";\n// import QuoteDetail from \"./Pages/QuoteDetail\";\n// import NotFound from \"./Pages/NotFound\";\nimport LoadingSpinner from \"./components/UI/LoadingSpinner\";\n\nconst NewQuote = React.lazy(() => import(\"./Pages/NewQuote\"));\nconst QuoteDetail = React.lazy(() => import(\"./Pages/QuoteDetail\"));\nconst NotFound = React.lazy(() => import(\"./Pages/NotFound\"));\n// const LoadingSpinner = React.lazy(() =>\n// import(\"./components/UI/LoadingSpinner\")\n// );\nfunction App() {\n  return (\n    <div>\n      <Layout>\n        <Suspense\n          fallback={\n            <div className=\"centered\">\n              <LoadingSpinner />\n            </div>\n          }\n        >\n          <Routes>\n            <Route path=\"/\" element={<Navigate to=\"/quotes\" />} />\n            <Route path=\"/quotes\" element={<AllQuotes />} />\n\n            <Route path=\"/quotes/:quoteId/*\" element={<QuoteDetail />} />\n            <Route path=\"/new-quote\" element={<NewQuote />} />\n            <Route path=\"*\" element={<NotFound />} />\n          </Routes>\n        </Suspense>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
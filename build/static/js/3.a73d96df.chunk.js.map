{"version":3,"sources":["components/comments/Comments.module.css","components/comments/NewCommentForm.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.module.css","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","Pages/QuoteDetail.js"],"names":["module","exports","NewCommentForm","props","commentTextRef","useRef","useHttp","addComment","sendRequest","status","error","params","useParams","onAddedComment","useEffect","submitFormHandler","event","preventDefault","commentData","text","current","value","quoteId","className","classes","form","onSubmit","LoadingSpinner","control","htmlFor","id","rows","ref","actions","CommentItem","item","CommentsList","comments","map","comment","Comments","useState","isAddingComment","setIsAddingComment","getAllComments","data","addedCommentHandler","useCallback","length","onClick","HighlightedQuote","quote","author","QuoteDetail","getSingleQuote","path","element","to"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,SAAW,6B,mBCA7BD,EAAOC,QAAU,CAAC,KAAO,6BAA6B,QAAU,gCAAgC,QAAU,gCAAgC,QAAU,kC,mBCApJD,EAAOC,QAAU,CAAC,KAAO,4B,mBCAzBD,EAAOC,QAAU,CAAC,SAAW,iC,mBCA7BD,EAAOC,QAAU,CAAC,MAAQ,kC,wICsDXC,EAjDQ,SAACC,GACtB,IAAMC,EAAiBC,mBACvB,EAAuCC,YAAQC,KAAvCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OAAQC,EAA7B,EAA6BA,MACvBC,EAASC,cAKPC,EAAmBV,EAAnBU,eAERC,qBAAU,WACO,cAAXL,GAA2BC,GAC7BG,MAED,CAACJ,EAAQC,EAAOG,IAEnB,IAAME,EAAoB,SAACC,GACzBA,EAAMC,iBAMNT,EAAY,CACVU,YAAa,CAAEC,KAAMf,EAAegB,QAAQC,OAC5CC,QAASX,EAAOW,UAElBlB,EAAegB,QAAQC,MAAQ,IAIjC,OACE,uBAAME,UAAWC,IAAQC,KAAMC,SAAUX,EAAzC,UACc,YAAXN,GACC,qBAAKc,UAAU,WAAf,SACE,cAACI,EAAA,EAAD,MAGJ,sBAAKJ,UAAWC,IAAQI,QAASF,SAAUX,EAA3C,UACE,uBAAOc,QAAQ,UAAf,0BACA,0BAAUC,GAAG,UAAUC,KAAK,IAAIC,IAAK5B,OAEvC,qBAAKmB,UAAWC,IAAQS,QAAxB,SACE,wBAAQV,UAAU,MAAlB,+B,iBCvCOW,EARK,SAAC/B,GACnB,OACE,oBAAIoB,UAAWC,IAAQW,KAAvB,SACE,4BAAIhC,EAAMgB,U,iBCQDiB,EAVM,SAACjC,GACpB,OACE,oBAAIoB,UAAWC,IAAQa,SAAvB,SACGlC,EAAMkC,SAASC,KAAI,SAACC,GAAD,OAClB,cAAC,EAAD,CAA8BpB,KAAMoB,EAAQpB,MAA1BoB,EAAQT,UCsDnBU,EArDE,WACf,MAA8CC,oBAAS,GAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KAEQrB,EADOV,cACPU,QAER,EAAsChB,YAAQsC,KAAtCpC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OAAQoC,EAA7B,EAA6BA,KAM7B/B,qBAAU,WACRN,EAAYc,KACX,CAACd,EAAac,IACjB,IAKIe,EALES,EAAsBC,uBAAY,WAEtCvC,EAAYc,KACX,CAACd,EAAac,IAoBjB,MAhBe,YAAXb,IACF4B,EACE,qBAAKd,UAAU,WAAf,SACE,cAACI,EAAA,EAAD,OAKS,cAAXlB,GAA0BoC,GAAQA,EAAKG,OAAS,IAClDX,EAAW,cAAC,EAAD,CAAcA,SAAUQ,KAGtB,cAAXpC,GAA4BoC,GAAwB,IAAhBA,EAAKG,SAC3CX,EAAW,mBAAGd,UAAU,WAAb,0CAIX,0BAASA,UAAWC,IAAQa,SAA5B,UACE,gDACEK,GACA,wBAAQnB,UAAU,MAAM0B,QAlCC,WAC7BN,GAAmB,IAiCf,2BAIDD,GACC,cAAC,EAAD,CAAgB7B,eAAgBiC,IAEjCT,M,iBC7CQa,EATU,SAAC/C,GACxB,OACE,yBAAQoB,UAAWC,IAAQ2B,MAA3B,UACE,4BAAIhD,EAAMgB,OACV,qCAAahB,EAAMiD,aCsDVC,UArDK,WAClB,IACQ/B,EADOV,cACPU,QACR,EAA6ChB,YAAQgD,KAAgB,GAA7D9C,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OAAQoC,EAA7B,EAA6BA,KAAMnC,EAAnC,EAAmCA,MAMnC,OAJAI,qBAAU,WACRN,EAAYc,KACX,CAACd,EAAac,IAEF,YAAXb,EAEA,qBAAKc,UAAU,WAAf,SACE,cAACI,EAAA,EAAD,MAKFjB,EACK,mBAAGa,UAAU,mBAAb,SAAiCb,IAGrCmC,EAAK1B,KASR,oCACE,cAAC,EAAD,CAAkBA,KAAM0B,EAAK1B,KAAMiC,OAAQP,EAAKO,SAGhD,eAAC,IAAD,WACE,cAAC,IAAD,CACEG,KAAK,IACLC,QACE,qBAAKjC,UAAU,WAAf,SACE,cAAC,IAAD,CAAMA,UAAU,YAAYkC,GAAG,WAA/B,0BASN,cAAC,IAAD,CAAOF,KAAK,WAAWC,QAAS,cAAC,EAAD,YA1B7B","file":"static/js/3.a73d96df.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__2IEA5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2T971\",\"loading\":\"NewCommentForm_loading__2yNpU\",\"control\":\"NewCommentForm_control__LaUQr\",\"actions\":\"NewCommentForm_actions__15yi3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__1CowQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__d3TTH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__1Nfv5\"};","import { useEffect, useRef } from \"react\";\nimport { useParams } from \"react-router\";\nimport useHttp from \"../../Hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\nimport classes from \"./NewCommentForm.module.css\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const { sendRequest, status, error } = useHttp(addComment);\n  const params = useParams();\n  // const history = useNavigate();\n  // useEffect(() => {\n  //   history(`/quotes/${params.quoteId}/comments`);\n  // }, [history, params.quoteId]);\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === \"completed\" && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    // optional: Could validate here\n\n    // send comment to server\n    // console.log(commentTextRef.current.value);\n    // sendRequest(commentTextRef.current.value);\n    sendRequest({\n      commentData: { text: commentTextRef.current.value },\n      quoteId: params.quoteId,\n    });\n    commentTextRef.current.value = \"\";\n    // console.log(error);\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === \"pending\" && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useEffect, useState, useCallback } from \"react\";\nimport useHttp from \"../../Hooks/use-http\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\nimport { useParams } from \"react-router\";\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const { quoteId } = params;\n\n  const { sendRequest, status, data } = useHttp(getAllComments);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n  const addedCommentHandler = useCallback(() => {\n    // SendRequest()\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comments;\n\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === \"completed\" && data && data.length > 0) {\n    comments = <CommentsList comments={data} />;\n  }\n\n  if (status === \"completed\" && (!data || data.length === 0)) {\n    comments = <p className=\"centered\">No comments were added yet!</p>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm onAddedComment={addedCommentHandler} />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { useEffect } from \"react\";\r\nimport { Routes, useParams, Route, Link } from \"react-router-dom\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport useHttp from \"../Hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\nconst QuoteDetail = () => {\r\n  const params = useParams();\r\n  const { quoteId } = params;\r\n  const { sendRequest, status, data, error } = useHttp(getSingleQuote, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest(quoteId);\r\n  }, [sendRequest, quoteId]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className=\"centered focused\">{error}</p>;\r\n  }\r\n\r\n  if (!data.text) {\r\n    return <p>No quote Found!</p>;\r\n  }\r\n  // console.log(data);\r\n  // const quote = data.find((quote) => quote.id === params.quoteId);\r\n  // if (!quote) {\r\n  //   return <p>Nooooo quote found!</p>;\r\n  // }\r\n  return (\r\n    <section>\r\n      <HighlightedQuote text={data.text} author={data.author} />\r\n      {/* <button></button> */}\r\n      {/* <Link to=\"comments\">Comments</Link> */}\r\n      <Routes>\r\n        <Route\r\n          path=\"/\"\r\n          element={\r\n            <div className=\"centered\">\r\n              <Link className=\"btn--flat\" to=\"comments\">\r\n                Comments\r\n              </Link>\r\n            </div>\r\n          }\r\n        />\r\n        {/* </Routes> */}\r\n\r\n        {/* <Routes> */}\r\n        <Route path=\"comments\" element={<Comments />} />\r\n      </Routes>\r\n    </section>\r\n  );\r\n};\r\nexport default QuoteDetail;\r\n"],"sourceRoot":""}